# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
builds:
  - ldflags:
    - -s -w -X "main.version={{.Env.RELEASE_VERSION}}" -X "main.CLIENT_ID={{.Env.CLIENT_ID}}" -X "main.CLIENT_SECRET={{.Env.CLIENT_SECRET}}"
  - main: main.go
    binary: hubapp 
    goos:
      - windows
      - linux
    goarch:
      - amd64
    ignore:
      - goos: darwin
        goarch: 386
      - goos: linux
        goarch: arm
        goarm: 7
checksum:
  name_template: '{{ .ProjectName }}_{{.Env.RELEASE_VERSION}}_checksums.txt'
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
archive:
  name_template: '{{ .ProjectName }}_{{.Env.RELEASE_VERSION}}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
  format_overrides:
  - goos: windows
    format: zip
brew:
  # Name of the recipe
  # Default to project name
  name: hubapp

  # Reporitory to push the tap to.
  github:
    owner: warrensbox
    name: homebrew-tap

  # Allows you to set a custom download strategy.
  # Default is empty.
  #download_strategy: GitHubPrivateRepositoryReleaseDownloadStrategy

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: Warren Veerasingam
    email: warren.veerasingam@gmail.com

  # Folder inside the repository to put the formula.
  # Default is the root folder.
  folder: Formula

  # Caveats for the user of your binary.
  # Default is empty.
  caveats: "Type 'hubapp install user/repo' on your command line and choose the app version that you want from the dropdown from the GitHub repo. This command currently only works on MacOs and Linux"

  # Your app's homepage.
  # Default is empty.
  homepage: "https://warrensbox.github.io/hubapp"

  # Your app's description.
  # Default is empty.
  description: "The hubapp command lets you install binary application from github."

  # Setting this will prevent goreleaser to actually try to commit the updated
  # formula - instead, the formula file will be stored on the dist folder only,
  # leaving the responsibility of publishing it to the user.
  # Default is false.
  skip_upload: false

  # Packages that conflict with your package.
  # conflicts:

  # So you can `brew test` your formula.
  # Default is empty.
  test: |
    system "#{bin}/hubapp --version"

  # Custom install script for brew.
  # Default is 'bin.install "program"'.
  install: |
    bin.install "hubapp"
release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL.
  github:
    owner: warrensbox
    name: hubapp

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: false

  # You can disable this pipe in order to not upload any artifacts to
  # GitHub.
  # Defaults to false.
  disable: false

